{
  "applicationType": {
    "name": "applicationType",
    "type": "list",
    "transitions": {
      "monolith": "baseName",
      "microservice": "baseName",
      "gateway": "baseName",
      "uaa": "baseName"
    },
    "expectedTransitions": 4,
    "init": true
  },
  "baseName": {
    "name": "baseName",
    "type": "input",
    "transitions": {
      "foo": "packageName"
    },
    "expectedTransitions": 1
  },
  "packageName": {
    "name": "packageName",
    "type": "input",
    "transitions": {
      "foo": "serviceDiscoveryType"
    },
    "expectedTransitions": 1
  },
  "serviceDiscoveryType": {
    "name": "serviceDiscoveryType",
    "type": "list",
    "transitions": {
      "false": "authenticationType",
      "eureka": "authenticationType",
      "consul": "authenticationType"
    },
    "expectedTransitions": 2
  },
  "authenticationType": {
    "name": "authenticationType",
    "type": "list",
    "transitions": {
      "jwt": "databaseType",
      "uaa": "uaaBaseName",
      "oauth2": "databaseType",
      "session": "databaseType"
    },
    "expectedTransitions": 3
  },
  "databaseType": {
    "name": "databaseType",
    "type": "list",
    "transitions": {
      "sql": "prodDatabaseType",
      "no": "buildTool",
      "mongodb": "buildTool",
      "cassandra": "buildTool",
      "couchbase": "buildTool"
    },
    "expectedTransitions": 4
  },
  "prodDatabaseType": {
    "name": "prodDatabaseType",
    "type": "list",
    "transitions": {
      "mysql": "devDatabaseType",
      "mariadb": "devDatabaseType",
      "postgresql": "devDatabaseType",
      "oracle": "devDatabaseType",
      "mssql": "devDatabaseType"
    },
    "expectedTransitions": 5
  },
  "devDatabaseType": {
    "name": "devDatabaseType",
    "type": "list",
    "transitions": {
      "h2Disk": "hibernateCache",
      "h2Memory": "hibernateCache",
      "postgresql": "hibernateCache",
      "oracle": "hibernateCache",
      "mssql": "hibernateCache",
      "mysql": "hibernateCache"
    },
    "expectedTransitions": 3
  },
  "hibernateCache": {
    "name": "hibernateCache",
    "type": "list",
    "transitions": {
      "ehcache": "buildTool",
      "hazelcast": "buildTool",
      "infinispan": "buildTool",
      "no": "buildTool"
    },
    "expectedTransitions": 4
  },
  "buildTool": {
    "name": "buildTool",
    "type": "list",
    "transitions": {
      "maven": "serverSideOptions",
      "gradle": "serverSideOptions"
    },
    "expectedTransitions": 2
  },
  "serverSideOptions": {
    "name": "serverSideOptions",
    "type": "checkbox",
    "transitions": {
      "enableSocialSignIn:true": "clientFramework",
      "enableSwaggerCodegen:true": "enableTranslation",
      "clusteredHttpSession:hazelcast": "clientFramework",
      "messageBroker:kafka": "enableTranslation",
      "websocket:spring-websocket": "clientFramework",
      "searchEngine:elasticsearch": "clientFramework",
      "enableSocialSignIn:true,searchEngine:elasticsearch": "clientFramework",
      "enableSocialSignIn:true,clusteredHttpSession:hazelcast": "clientFramework",
      "enableSocialSignIn:true,websocket:spring-websocket": "clientFramework",
      "enableSocialSignIn:true,enableSwaggerCodegen:true": "clientFramework",
      "enableSocialSignIn:true,messageBroker:kafka": "clientFramework",
      "searchEngine:elasticsearch,websocket:spring-websocket": "clientFramework",
      "searchEngine:elasticsearch,enableSwaggerCodegen:true": "clientFramework",
      "searchEngine:elasticsearch,messageBroker:kafka": "clientFramework",
      "websocket:spring-websocket,enableSwaggerCodegen:true": "clientFramework",
      "websocket:spring-websocket,messageBroker:kafka": "clientFramework",
      "enableSwaggerCodegen:true,messageBroker:kafka": "clientFramework",
      "enableSocialSignIn:true,searchEngine:elasticsearch,websocket:spring-websocket": "clientFramework",
      "enableSocialSignIn:true,searchEngine:elasticsearch,enableSwaggerCodegen:true": "clientFramework",
      "enableSocialSignIn:true,searchEngine:elasticsearch,messageBroker:kafka": "clientFramework",
      "enableSocialSignIn:true,websocket:spring-websocket,enableSwaggerCodegen:true": "clientFramework",
      "enableSocialSignIn:true,websocket:spring-websocket,messageBroker:kafka": "clientFramework",
      "enableSocialSignIn:true,enableSwaggerCodegen:true,messageBroker:kafka": "clientFramework",
      "searchEngine:elasticsearch,websocket:spring-websocket,enableSwaggerCodegen:true": "clientFramework",
      "searchEngine:elasticsearch,websocket:spring-websocket,messageBroker:kafka": "clientFramework",
      "searchEngine:elasticsearch,enableSwaggerCodegen:true,messageBroker:kafka": "clientFramework",
      "websocket:spring-websocket,enableSwaggerCodegen:true,messageBroker:kafka": "clientFramework",
      "enableSocialSignIn:true,searchEngine:elasticsearch,websocket:spring-websocket,enableSwaggerCodegen:true": "clientFramework",
      "enableSocialSignIn:true,searchEngine:elasticsearch,websocket:spring-websocket,messageBroker:kafka": "clientFramework",
      "enableSocialSignIn:true,searchEngine:elasticsearch,enableSwaggerCodegen:true,messageBroker:kafka": "clientFramework",
      "enableSocialSignIn:true,websocket:spring-websocket,enableSwaggerCodegen:true,messageBroker:kafka": "clientFramework"
    },
    "expectedTransitions": 31
  },
  "clientFramework": {
    "name": "clientFramework",
    "type": "list",
    "transitions": {
      "angularX": "useSass",
      "angular1": "useSass"
    },
    "expectedTransitions": 2
  },
  "useSass": {
    "name": "useSass",
    "type": "confirm",
    "transitions": {
      "true": "enableTranslation",
      "false": "enableTranslation"
    },
    "expectedTransitions": 2
  },
  "enableTranslation": {
    "name": "enableTranslation",
    "type": "confirm",
    "transitions": {
      "true": "nativeLanguage",
      "false": "testFrameworks"
    },
    "expectedTransitions": 2
  },
  "nativeLanguage": {
    "name": "nativeLanguage",
    "type": "list",
    "transitions": {
      "en": "languages"
    },
    "expectedTransitions": 1
  },
  "languages": {
    "name": "languages",
    "type": "checkbox",
    "transitions": {
      "en": "testFrameworks"
    },
    "expectedTransitions": 1
  },
  "testFrameworks": {
    "name": "testFrameworks",
    "type": "checkbox",
    "transitions": {
      "gatling,cucumber,protractor": "installModules"
    },
    "expectedTransitions": 1
  },
  "installModules": {
    "name": "installModules",
    "type": "confirm",
    "transitions": {
      "false": null
    },
    "expectedTransitions": 1,
    "end": true
  },
  "serverPort": {
    "name": "serverPort",
    "type": "input",
    "transitions": {
      "8080": "packageName"
    },
    "expectedTransitions": 1
  },
  "uaaBaseName": {
    "name": "uaaBaseName",
    "type": "input",
    "transitions": {
      "foo": "databaseType"
    },
    "expectedTransitions": 1
  }
}
